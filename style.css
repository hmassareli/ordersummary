/*- Mobile: 375px
- Desktop: 1440px

## Colors

### Primary

- Pale blue: hsl(225, 100%, 94%)
- Bright blue: hsl(245, 75%, 52%)

### Neutral

- Very pale blue: hsl(225, 100%, 98%)
- Desaturated blue: hsl(224, 23%, 55%)              
- Dark blue: hsl(223, 47%, 23%)8

Responsividade: Como ele se adapta a diferentes tipos de tela */ 
@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@400;500;600;700&display=swap');

:root{
    --pale-blue: hsl(225, 100%, 94%);
    --azul-mais-clarinho: hsla(245, 100%, 49%, 0.692);
    --bright-blue: hsl(245, 75%, 52%);
    --very-pale-blue : hsl(225, 100%, 98%);
    --dark-blue : hsl(223, 47%, 23%);
    --desaturated-blue: hsl(224, 23%, 55%);
}
*{
    margin:0px;
    font-family: Red Hat Display;

}
* p{
    color:hsl(224, 23%, 55%);
    font-weight: 500;
}
h1{
    font-weight: 700;
}
h2{
    font-weight: 600;
}

.container {
    align-items: center;
    width: 100vw;                                                                                                     /* Largura */
    height: 100vh;                                                                                                    /* Altura  */
    display: flex;            
    justify-content: center;                                                                                          /* Possui 5 valores, Esta propriedade define o alinhamento dos ítens ao longo do eixo principal. | Center: os ítens são centralizados na linha. */
    overflow: hidden;
    background-image: url("./images/pattern-background-desktop.svg");
    background-repeat: no-repeat;
    background-size: contain;
    background-color: hsl(225, 100%, 94%);
}

.card {
    font-family: Red Hat Display;
    width: 450px;                                                                                                     /* Determina a largura da área de conteúdo de um elemento */
    height: auto;                                                                                                    /* Determina a altura da área do conteúdo de um elemento. */
    display: flex;                                                                                                    /* É a forma que a gente vai rederizar os elementos na tela. */
    flex-direction: column;                                                                                           /* Coloca os itens em coluna, flex-direction é a direção que os elementos vão ficar. */
                                                                                                                        /* Justify content Possui 5 valores, Esta propriedade define o alinhamento dos ítens ao longo do eixo principal. | Flex start: lex-start (padrão): os ítens são alinhados junto à borda de início (start) de acordo com qual for a flex-direction do container */
    border-radius: 20px;                                                                                              /* Borda arredondada */
    background-color:hsl(225, 100%, 98%)   ;                                                                        /* Cor de fundo */
    padding: 0px;                                                                                                     /* Espaçamento interno, como se fosse algo comprimindo todos os elementos para dentro */
    overflow: hidden;                                                                                                 /* Se alguma coisa dentro do card começar a sair do espaçamento ou das bordas. Possui 4 valores, porém o hidden: O estouro é cortado e o resto do conteúdo ficará invisível */
    box-shadow: 0 0 90px 0 black;
    padding-bottom: 30px;                                                                                   /* Utilizado para adicionar efeitos de sombra em volta de um elemento. */
}

#card-image {
    width: 100%;
    display: block;                                                                                                   /* Utilizamos o display: block para informar que aquele elemento irá ocupar o espaço de uma linha, de um "bloco" no fluxo, ou seja, será o único elemento daquela linha. Já o display: inline, informa que o elemento deve ficar na mesma linha que os outros elementos em questão. */
}
#plan-option {
    padding: 20px 30px;
    display:flex;
    align-items: center;
    background-color: hsl(224, 100%, 97%);
    border-radius: 15px;
}

#card-image img {
    width: 100%;
}
#plan-change-option{
    margin-left:auto;
}
#title-container {
    padding: 0px 20px;
    text-align: center;                                                                                                 /* Alinhar texto, vai ficar centralizado. */
}
#plan-option #plan-description{
    margin-left:20px;
}
#card-content {
    padding: 5px 50px;
}

#title {
    margin-bottom: 10px;                                                                                              /* margem-bottom é a margem que fica pra baixo */ 
}

#card-content > div {
    margin-top: 20px;                                                                                                 /* margin-top é a margem que fica em cima */
}
#buttons button{
    margin-top:10px;
    background-color: var(--bright-blue);
    padding:15px 10px;
    color: white;
    width: 350px;
    border-radius: 10px;
    border: 0px;
    font-weight: 700;
    cursor:pointer;
}
#buttons button:hover{
    background-color: var(--azul-mais-clarinho) ;
}
#cancel-order{
    margin-top:20px;
    display:block;
    text-decoration: none;
    font-weight:700;
    text-align: center;
    color:var(--desaturated-blue)
}


 











